plugins {
	id 'fabric-loom' version '0.5.43'
	id 'maven-publish'
	id 'com.modrinth.minotaur' version '1.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name

def ENV = System.getenv()
def build = "local"
if (ENV.BUILD_NUMBER) {
	build = ENV.BUILD_NUMBER
}

version = project.mod_version + "+build." + build
group = project.maven_group

import com.modrinth.minotaur.TaskModrinthUpload

minecraft {
}

repositories {
	maven {
		name = "Gegy"
		url = "https://maven.gegy.dev/"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://dl.bintray.com/ladysnake/libs'
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// Fantasy (runtime custom dynamic worlds)
	modImplementation "xyz.nucleoid:fantasy:0.1.7"
	include "xyz.nucleoid:fantasy:0.1.7"

	// Leukocyte (region permission control)
	modImplementation "xyz.nucleoid:leukocyte:0.1.2"
	include "xyz.nucleoid:leukocyte:0.1.2"

	// Cardinal Components (player data storage)
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

task publishModrinth(type: TaskModrinthUpload, dependsOn: remapJar) {
	token = ENV["MODRINTH_TOKEN"]
	projectId = '3WSAEENm'
	versionNumber = project.version
	uploadFile = remapJar
	addGameVersion('1.16.4')
	addLoader('fabric')
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}